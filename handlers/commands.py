import logging
from aiogram import Router
from aiogram.types import Message, InlineKeyboardButton, WebAppInfo
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from handlers.photo import ReceiptStates
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config.settings import WEBAPP_URL

logger = logging.getLogger(__name__)
router = Router()

HELP_TEXT = (
    "üìö –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n"
    "1. üì∏ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —á–µ–∫–∞\n"
    "2. üîç –Ø —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã\n"
    "3. ‚úÖ –í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–≤–æ–π —Å—á–µ—Ç\n"
    "4. üí∞ –Ø –ø–æ—Å—á–∏—Ç–∞—é —Ç–≤–æ—é —á–∞—Å—Ç—å\n\n"
    "üí° –°–æ–≤–µ—Ç—ã:\n"
    "‚Ä¢ –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–æ—Ç–æ —á–µ–∫–∞ —á–µ—Ç–∫–æ–µ –∏ —Ö–æ—Ä–æ—à–æ –æ—Å–≤–µ—â–µ–Ω–Ω–æ–µ\n"
    "‚Ä¢ –ß–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–∏–¥–µ–Ω –Ω–∞ —Ñ–æ—Ç–æ\n"
    "‚Ä¢ –ï—Å–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –µ—â–µ —Ä–∞–∑\n\n"
    "‚ùì –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"
)

@router.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ webapp"""
    args = message.text.split(maxsplit=1)
    if len(args) > 1 and args[1].startswith("webapp_"):
        message_id = args[1].replace("webapp_", "")
        webapp_url = f"{WEBAPP_URL}/{message_id}"
        keyboard = InlineKeyboardBuilder()
        keyboard.row(
            InlineKeyboardButton(
                text="üåê –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                web_app=WebAppInfo(url=webapp_url)
            )
        )
        await message.answer(
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
            reply_markup=keyboard.as_markup()
        )
        return
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —á–µ–∫–æ–≤.\n\n"
        "üì∏ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —á–µ–∫–∞, –∏ —è –ø–æ–º–æ–≥—É —Ä–∞–∑–¥–µ–ª–∏—Ç—å –µ–≥–æ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.\n\n"
        "üîç –Ø –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å:\n"
        "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤\n"
        "‚Ä¢ –¶–µ–Ω—ã\n"
        "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ\n"
        "‚Ä¢ –°–∫–∏–¥–∫–∏\n"
        "‚Ä¢ –ü–ª–∞—Ç—É –∑–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\n\n"
        "üí° –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —á–µ–∫–∞, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –µ–≥–æ!"
    )

@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer(HELP_TEXT)

@router.message(Command("split"))
async def cmd_split(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /split"""
    await state.set_state(ReceiptStates.waiting_for_photo)
    await message.answer("üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.")

@router.message(Command("testwebapp"))
async def cmd_test_webapp(message: Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ WebApp."""
    logger.critical(f"!!!! –ö–û–ú–ê–ù–î–ê /testwebapp –ü–û–õ–£–ß–ï–ù–ê !!!! WEBAPP_URL: {WEBAPP_URL}")
    
    if not WEBAPP_URL:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")
        logger.error("WEBAPP_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–µ –º–æ–≥—É –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π WebApp.")
        return

    # URL –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ WebApp –±—É–¥–µ—Ç WEBAPP_URL + '/test_webapp'
    # –í–∞–∂–Ω–æ: WEBAPP_URL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–∞–∑–æ–≤—ã–º URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://yourdomain.com)
    # –±–µ–∑ –∑–∞–≤–µ—Ä—à–∞—é—â–µ–≥–æ —Å–ª–µ—à–∞, –µ—Å–ª–∏ –≤—ã –µ–≥–æ —Ç–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ, –∏–ª–∏ —Å –Ω–∏–º, –µ—Å–ª–∏ –≤–∞—à Flask –Ω–∞—Å—Ç—Ä–æ–µ–Ω –æ–∂–∏–¥–∞—Ç—å –µ–≥–æ.
    # –í —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ server.py (–º–∞—Ä—à—Ä—É—Ç /test_webapp) –æ–Ω –æ–∂–∏–¥–∞–µ—Ç, —á—Ç–æ WEBAPP_URL –Ω–µ –∏–º–µ–µ—Ç —Å–ª–µ—à–∞ –Ω–∞ –∫–æ–Ω—Ü–µ.
    test_webapp_url = f"{WEBAPP_URL}/test_webapp"
    
    logger.info(f"–§–æ—Ä–º–∏—Ä—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ WebApp: {test_webapp_url}")

    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="üß™ –û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π WebApp",
            web_app=WebAppInfo(url=test_webapp_url)
        )
    )
    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.",
        reply_markup=keyboard.as_markup()
    ) 