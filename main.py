import asyncio
import logging
from typing import Any
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.enums import ParseMode
from aiogram.types import BotCommand
from config.settings import TELEGRAM_BOT_TOKEN, LOG_LEVEL
from handlers import photo, callbacks, commands, webapp, inline

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.DEBUG if LOG_LEVEL == "DEBUG" else logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler("bot.log"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (items –∏ –∏—Ö —Å—á–µ—Ç—á–∏–∫–∏) –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
message_states: dict[int, dict[str, Any]] = {}

# –≠–∫—Å–ø–æ—Ä—Ç message_states –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
callbacks.message_states = message_states
photo.message_states = message_states
# webapp.message_states = message_states # –í—Ä–µ–º–µ–Ω–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

async def main():
    logger.info(f"–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å OpenAI GPT Vision –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –≤—ã–±–æ—Ä–∞...")
    logger.info(f"–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {LOG_LEVEL}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    storage = MemoryStorage()
    bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher(storage=storage)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    await register_commands(bot)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.include_router(photo.router)
    dp.include_router(webapp.router)
    dp.include_router(callbacks.router)
    dp.include_router(commands.router)
    dp.include_router(inline.router)
    
    await dp.start_polling(bot)

async def register_commands(bot: Bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é."""
    commands = [
        BotCommand(command="start", description="üëã –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        BotCommand(command="help", description="‚ùì –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"),
        BotCommand(command="split", description="üìá –†–∞–∑–¥–µ–ª–∏—Ç—å —á–µ–∫ (–≤ –≥—Ä—É–ø–ø–µ)")
    ]
    await bot.set_my_commands(commands)
    logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

if __name__ == "__main__":
    asyncio.run(main()) 