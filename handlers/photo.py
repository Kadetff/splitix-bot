import logging
from decimal import Decimal
from aiogram import F, Router
from aiogram.types import Message
from aiogram.enums import ChatType
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from services.openai_service import process_receipt_with_openai
from utils.keyboards import create_items_keyboard_with_counters
from typing import Dict, Any

logger = logging.getLogger(__name__)
router = Router()

class ReceiptStates(StatesGroup):
    waiting_for_photo = State()
    waiting_for_items_selection = State()

# –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ main.py
message_states: Dict[int, Dict[str, Any]] = {}

async def process_receipt_photo(message: Message, state: FSMContext):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ —Å –Ω–∞–∏–ª—É—á—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
        photo = message.photo[-1]
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ ID: {photo.file_id}, —Ä–∞–∑–º–µ—Ä: {photo.file_size} –±–∞–π—Ç")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        file = await message.bot.get_file(photo.file_id)
        file_path = file.file_path
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: {file_path}")
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
        file_bytes = await message.bot.download_file(file_path)
        image_data = file_bytes.read()
        logger.info(f"–§–æ—Ç–æ —Å–∫–∞—á–∞–Ω–æ, —Ä–∞–∑–º–µ—Ä: {len(image_data)} –±–∞–π—Ç")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_message = await message.answer("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —á–µ–∫...")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ–∫ —á–µ—Ä–µ–∑ OpenAI
        logger.info("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ OpenAI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
        items, service_charge, total_check_amount, total_discount_percent, total_discount_amount = await process_receipt_with_openai(image_data)
        
        if not items:
            logger.warning("OpenAI –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–æ–≤–∞—Ä–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ —á–µ–∫–µ")
            await processing_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —á–µ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ–ª–µ–µ —á–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ.")
            await state.clear()
            return
        
        logger.info(f"–£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ {len(items)} –ø–æ–∑–∏—Ü–∏–π –≤ —á–µ–∫–µ")
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º total_before_discounts –∏ —É–ª—É—á—à–∞–µ–º —Ä–∞—Å—á–µ—Ç—ã
        total_items_cost = Decimal("0.00")  # –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π –¥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫
        total_discounts = total_discount_amount if total_discount_amount is not None else Decimal("0.00")

        # –°—á–∏—Ç–∞–µ–º —Å—É–º–º—É –¥–æ —Å–∫–∏–¥–æ–∫ –∏ —Å—É–º–º—É —Å–∫–∏–¥–æ–∫
        for item in items:
            if item["total_amount_from_openai"] is not None:
                item_total = item["total_amount_from_openai"]
                total_items_cost += item_total
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ = —Å—É–º–º–∞ –¥–æ —Å–∫–∏–¥–æ–∫ - —Å—É–º–º–∞ —Å–∫–∏–¥–æ–∫
        calculated_total = total_items_cost - total_discounts
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Å–±–æ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å
        service_charge_amount = Decimal("0.00")
        if service_charge is not None:
            service_charge_amount = (calculated_total * service_charge / Decimal("100")).quantize(Decimal("0.01"))
            calculated_total += service_charge_amount

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö
        response_msg_text = "–ü–æ–∑–∏—Ü–∏–∏ –∏–∑ —á–µ–∫–∞ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–≤–æ–π —Å—á—ë—Ç:\n"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é actual_discount_percent –¥–æ —É—Å–ª–æ–≤–Ω–æ–≥–æ –±–ª–æ–∫–∞
        actual_discount_percent = Decimal("0.00")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–∞—Ö
        if total_discount_percent is not None or total_discount_amount is not None:
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏
            if total_items_cost > 0:
                actual_discount_percent = (total_discounts * Decimal("100") / total_items_cost).quantize(Decimal("0.01"))
                response_msg_text += f"\nüéâ –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Å–∫–∏–¥–∫–∞: {actual_discount_percent}% (-{total_discounts:.2f})"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–Ω–æ–º —Å–±–æ—Ä–µ
        if service_charge is not None:
            response_msg_text += f"\nüí∞ –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–±–æ—Ä: {service_charge}% (+{service_charge_amount:.2f})"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ —Å—É–º–º
        if total_check_amount is not None:
            if abs(calculated_total - total_check_amount) < Decimal("0.01"):  # –£—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
                response_msg_text += f"\n‚úÖ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {total_check_amount:.2f} (—Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ä–∞—Å—á–µ—Ç–æ–º)"
            else:
                response_msg_text += f"\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: —Å—É–º–º–∞ –≤ —á–µ–∫–µ ({total_check_amount:.2f}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ä–∞—Å—á–µ—Ç–æ–º ({calculated_total:.2f}). –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏."
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å —Å—á–µ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        empty_user_counts = {}
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞
        keyboard = create_items_keyboard_with_counters(items, empty_user_counts)
        
        logger.info("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —á–µ–∫–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        result_message = await processing_message.edit_text(
            response_msg_text,
            reply_markup=keyboard
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å message_states
        message_states[result_message.message_id] = {
            "items": items,
            "user_selections": {},  # –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            "service_charge_percent": service_charge,
            "total_check_amount": total_check_amount,
            "total_discount_percent": total_discount_percent,
            "total_discount_amount": total_discount_amount,
            "actual_discount_percent": actual_discount_percent,
        }
        
        logger.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è message_id: {result_message.message_id}")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤
        await state.set_state(ReceiptStates.waiting_for_items_selection)
        logger.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: waiting_for_items_selection")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}", exc_info=True)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —á–µ–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        await state.clear()

@router.message(F.photo)
async def handle_photo(message: Message, state: FSMContext):
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–∞—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    chat_id = message.chat.id
    chat_type = message.chat.type
    chat_title = getattr(message.chat, 'title', '–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    current_state = await state.get_state()
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ. ID —á–∞—Ç–∞: {chat_id}, –¢–∏–ø —á–∞—Ç–∞: {chat_type}, –ù–∞–∑–≤–∞–Ω–∏–µ: {chat_title}, –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ª—é–±—ã—Ö –≥—Ä—É–ø–ø
    if hasattr(message.chat, 'is_forum'):
        logger.info(f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞: is_forum={message.chat.is_forum}")
        
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ª–∏—á–Ω—ã–º —á–∞—Ç–æ–º
    is_personal_chat = (chat_type == ChatType.PRIVATE and chat_id > 0)
    logger.info(f"–†–µ—à–µ–Ω–∏–µ: —ç—Ç–æ –ª–∏—á–Ω—ã–π —á–∞—Ç? {is_personal_chat}")
    
    # –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ
    if is_personal_chat:
        # –í –ª–∏—á–∫–µ (–æ–¥–∏–Ω-–Ω–∞-–æ–¥–∏–Ω) ‚Äî –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ –∫–∞–∫ —á–µ–∫
        logger.info("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ –∫–∞–∫ —á–µ–∫ (–ª–∏—á–Ω—ã–π —á–∞—Ç)")
        await process_receipt_photo(message, state)
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
        should_process = (current_state == ReceiptStates.waiting_for_photo.state)
        logger.info(f"–≠—Ç–æ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ? {should_process}")
        
        if should_process:
            logger.info("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ –∫–∞–∫ —á–µ–∫ (–≥—Ä—É–ø–ø–∞, –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è)")
            await process_receipt_photo(message, state)
        else:
            logger.info("–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ñ–æ—Ç–æ (–≥—Ä—É–ø–ø–∞, –Ω–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è)")
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ñ–æ—Ç–æ 