from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from config.settings import WEBAPP_URL, BOT_USERNAME
import logging

logger = logging.getLogger(__name__)

def create_receipt_keyboard(message_id: int, chat_type: str = "private") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —á–µ–∫–æ–º.
    
    Args:
        message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —á–µ–∫–æ–º
        chat_type: –¢–∏–ø —á–∞—Ç–∞ ("private" –∏–ª–∏ "group")
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏:
        - –î–ª—è –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞: Mini App, –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        - –î–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞: –û—Ç–∫—Ä—ã—Ç—å Mini App (–≤ –õ–°), –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥, –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    """
    builder = InlineKeyboardBuilder()
    
    # –û—á–∏—â–∞–µ–º URL –æ—Ç –∫–∞–≤—ã—á–µ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    clean_url = WEBAPP_URL.strip('"\'')
    webapp_url = f"{clean_url}/{message_id}"
    
    # –£–±—Ä–∞–Ω—ã –∫–Ω–æ–ø–∫–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if chat_type != "private":
        # –î–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ - —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ –∏—Ç–æ–≥–∞
        builder.row(InlineKeyboardButton(
            text="üìä –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥",
            callback_data=f"show_intermediate_summary:{message_id}"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π (–æ–±—â–∞—è –¥–ª—è –æ–±–æ–∏—Ö —Ä–µ–∂–∏–º–æ–≤)
    builder.row(InlineKeyboardButton(
        text="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
        callback_data="show_instructions"
    ))
    
    return builder.as_markup()

def create_test_webapp_inline_keyboard(webapp_url: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π WebApp –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    
    Args:
        webapp_url: URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π WebApp
    """
    builder = InlineKeyboardBuilder()
    
    try:
        webapp_button = InlineKeyboardButton(
            text="üß™ –û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π WebApp (Inline)",
            web_app=WebAppInfo(url=webapp_url)
        )
        builder.row(webapp_button)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        builder.row(InlineKeyboardButton(
            text="‚ÑπÔ∏è –û WebApp",
            callback_data="webapp_info"
        ))
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Inline WebApp –∫–Ω–æ–ø–∫–∏: {e}", exc_info=True)
        # Fallback –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        builder.row(InlineKeyboardButton(
            text="‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è WebApp",
            callback_data="webapp_error"
        ))
    
    return builder.as_markup()

def create_test_webapp_reply_keyboard(webapp_url: str) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π WebApp –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    
    Args:
        webapp_url: URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π WebApp
    """
    builder = ReplyKeyboardBuilder()
    
    try:
        webapp_button = KeyboardButton(
            text="üß™ –û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π WebApp (Reply)",
            web_app=WebAppInfo(url=webapp_url)
        )
        builder.row(webapp_button)
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–±–∏—Ä–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        builder.row(KeyboardButton(text="üîô –£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"))
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Reply WebApp –∫–Ω–æ–ø–∫–∏: {e}", exc_info=True)
        # Fallback –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        builder.row(KeyboardButton(text="‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è WebApp"))
        builder.row(KeyboardButton(text="üîô –£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"))
    
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False) 